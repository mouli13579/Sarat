
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Net.Mail;
using System.Web.Http;
using System.Data.OleDb;
using System.Data;
using System.Configuration;
using System.IO;

namespace APIServices.Controllers
{
    public class AutoGeneratedMailsController : ApiController
    {
        private string SupportEmail = ConfigurationManager.AppSettings["SupportEmail"].ToString();
        private string SupportPwd = ConfigurationManager.AppSettings["SupportPwd"].ToString();
        private string MailHost = ConfigurationManager.AppSettings["MailHost"].ToString();

        private string baseUrl = ConfigurationManager.AppSettings["baseUrl"].ToString();
        private string EmailTemplatePath = ConfigurationManager.AppSettings["EmailTemplatePath"].ToString();
        private string EmailTemplateImagesUrl = ConfigurationManager.AppSettings["EmailTemplateImagesUrl"].ToString();

        OleDbConnection oledbConn;
        // GET api/<controller>
        public IEnumerable<string> Get()
        {
            return new string[] { "value1", "value2" };
        }
        /// <summary>
        /// Test Method
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        public string Get(int id)
        {

            SmtpClient client = new SmtpClient();
            client.Port = 25;
            client.DeliveryMethod = SmtpDeliveryMethod.Network;
            client.UseDefaultCredentials = false;
            client.Credentials = new System.Net.NetworkCredential(SupportEmail, SupportPwd);
            client.Host = MailHost;
            string path = "F:\\Projects\\sarat\\gitbranch\\Sarat\\APIServices\\FileServer\\Test.xlsx";
            oledbConn = new OleDbConnection(@"Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + path + ";Extended Properties='Excel 12.0;HDR=YES;IMEX=1;';");
            oledbConn.Open();
            OleDbCommand cmd = new OleDbCommand(); ;
            OleDbDataAdapter oleda = new OleDbDataAdapter();
            DataSet ds = new DataSet();
            cmd.Connection = oledbConn;
            cmd.CommandType = CommandType.Text;
            // cmd.CommandText = "SELECT [Editor], [Mail] FROM [EDITORS$]";
            cmd.CommandText = "SELECT [Name], [EmailId] FROM [Sheet1$]";
            oleda = new OleDbDataAdapter(cmd);
            oleda.Fill(ds);
            foreach (DataRow dr in ds.Tables[0].Rows)
            {
                string ReceiverEmail = Convert.ToString(dr["EmailId"]);
                string ReceiverName = Convert.ToString(dr["Name"]);
                if (ReceiverEmail != "")
                {
                    MailMessage mail = new MailMessage("support@paraapublications.com", ReceiverEmail);
                    mail.Subject = "this is a test email.";
                    mail.Body = "Hi," + ReceiverName + "this is my test email body";
                    client.Send(mail);
                }
            }


            return "true";
        }
        [HttpGet]
        public void SendRegistrationEmail(string toUserEmail,string UName)
        {
            SmtpClient client = new SmtpClient();
            client.Port = 25;
            client.DeliveryMethod = SmtpDeliveryMethod.Network;
            client.UseDefaultCredentials = false;
            client.Credentials = new System.Net.NetworkCredential(SupportEmail, SupportPwd);
            client.Host = MailHost;
            if (toUserEmail != null || toUserEmail != "")
            {
                MailMessage mail = new MailMessage(SupportEmail, toUserEmail);
                mail.Bcc.Add(SupportEmail);
                mail.Subject = "Registration Success";
                string body = string.Empty;
                using (WebClient webClient = new WebClient())
                {
                    using (Stream stream = webClient.OpenRead(baseUrl + "/" + EmailTemplatePath + "RegisteredEmail_Template.html"))
                    {
                        using (StreamReader reader = new StreamReader(stream))
                        {
                            body = reader.ReadToEnd();
                        }
                    }                
                }
                string imgSiteUrl = baseUrl+ EmailTemplateImagesUrl +"emailbanner.jpg";
                string EmailIcon = baseUrl+ EmailTemplateImagesUrl + "Mail.png";
                string HelpIcon = baseUrl + EmailTemplateImagesUrl + "globe.png";

                body = body.Replace("{baseiconUrl}", imgSiteUrl);
                body = body.Replace("{EmailIcon}", EmailIcon);
                body = body.Replace("{HelpIcon}", HelpIcon);

                body = body.Replace("{Name}", UName);
                mail.Body = body;
                mail.IsBodyHtml = true;
                client.Send(mail);
            }
        }
        // POST api/<controller>
        public void Post([FromBody]string value)
        {
        }

        // PUT api/<controller>/5
        public void Put(int id, [FromBody]string value)
        {
        }

        // DELETE api/<controller>/5
        public void Delete(int id)
        {
        }
    }
}